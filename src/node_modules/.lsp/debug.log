Hello - from /Users/hew/.config/bin//reason-language-server.exe
Previous log location: /var/folders/jm/0vvhj8q12l92b2p_qht5mptm0000gn/T/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Primatives.re","languageId":"reason","version":1,"text":"[@react.component]\nlet make =\n    (\n      ~py=0,\n      ~px=0,\n      ~p=0,\n      ~mt=0,\n      ~mb=0,\n      ~ml=0,\n      ~mr=0,\n      ~style=Css.style([]),\n      (),\n    ) =>\n  <div\n    style={ReactDOMRe.Style.make(\n      ~marginTop=\n        switch (mt) {\n        | mt when mt == 5 => 0 |> string_of_int\n        | mt when mt == 4 => 0 |> string_of_int\n        | mt when mt == 3 => 0 |> string_of_int\n        | mt when mt == 2 => 0 |> string_of_int\n        | mt when mt == 1 => 0 |> string_of_int\n        | mt => mt |> string_of_int\n        /* | None => [] */\n        },\n      (),\n    )}\n  />;\n"}}}
📣 📣 NEW BSB PACKAGE 📣 📣
- location: /Users/hew/Code/styled-system
- bsPlatform: /Users/hew/Code/styled-system/node_modules/bs-platform
- buildSystem: bsb version 5.0.3
- build command: /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsb.exe -make-world
>> Build system running: /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsb.exe -make-world
>>> stdout
ninja: no work to do.
ninja: no work to do.
[1/1] [34mBuilding[39m [2msrc/Box-ReactHooksTemplate.cmj[22m

  We've found a bug for you!
  /Users/hew/Code/styled-system/src/Box.re 42:26-27
  
  40 ┆ ~marginLeft=(),
  41 ┆ ~padding=(),
  42 ┆ ~paddingVertical=(),
  43 ┆ ~paddingHorizontal=(),
  44 ┆ (),
  
  The function applied to this argument has type
    (~azimuth: string=?, ~background: string=?,
    ~backgroundAttachment: string=?, ~backgroundColor: string=?,
    ~backgroundImage: string=?, ~backgroundPosition: string=?,
    ~backgroundRepeat: string=?, ~border: string=?,
    ~borderCollapse: string=?, ~borderColor: string=?,
    ~borderSpacing: string=?, ~borderStyle: string=?, ~borderTop: string=?,
    ~borderRight: string=?, ~borderBottom: string=?, ~borderLeft: string=?,
    ~borderTopColor: string=?, ~borderRightColor: string=?,
    ~borderBottomColor: string=?, ~borderLeftColor: string=?,
    ~borderTopStyle: string=?, ~borderRightStyle: string=?,
    ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
    ~borderTopWidth: string=?, ~borderRightWidth: string=?,
    ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
    ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
    ~clear: string=?, ~clip: string=?, ~color: string=?, ~content: string=?,
    ~counterIncrement: string=?, ~counterReset: string=?, ~cue: string=?,
    ~cueAfter: string=?, ~cueBefore: string=?, ~cursor: string=?,
    ~direction: string=?, ~display: string=?, ~elevation: string=?,
    ~emptyCells: string=?, ~float: string=?, ~font: string=?,
    ~fontFamily: string=?, ~fontSize: string=?, ~fontSizeAdjust: string=?,
    ~fontStretch: string=?, ~fontStyle: string=?, ~fontVariant: string=?,
    ~fontWeight: string=?, ~height: string=?, ~left: string=?,
    ~letterSpacing: string=?, ~lineHeight: string=?, ~listStyle: string=?,
    ~listStyleImage: string=?, ~listStylePosition: string=?,
    ~listStyleType: string=?, ~margin: string=?, ~markerOffset: string=?,
    ~marks: string=?, ~maxHeight: string=?, ~maxWidth: string=?,
    ~minHeight: string=?, ~minWidth: string=?, ~orphans: string=?,
    ~outline: string=?, ~outlineColor: string=?, ~outlineStyle: string=?,
    ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
    ~overflowY: string=?, ~paddingTop: string=?, ~paddingRight: string=?,
    ~paddingBottom: string=?, ~paddingLeft: string=?, ~page: string=?,
    ~pageBreakAfter: string=?, ~pageBreakBefore: string=?,
    ~pageBreakInside: string=?, ~pause: string=?, ~pauseAfter: string=?,
    ~pauseBefore: string=?, ~pitch: string=?, ~pitchRange: string=?,
    ~playDuring: string=?, ~position: string=?, ~quotes: string=?,
    ~richness: string=?, ~right: string=?, ~size: string=?, ~speak: string=?,
    ~speakHeader: string=?, ~speakNumeral: string=?,
    ~speakPunctuation: string=?, ~speechRate: string=?, ~stress: string=?,
    ~tableLayout: string=?, ~textAlign: string=?, ~textDecoration: string=?,
    ~textIndent: string=?, ~textShadow: string=?, ~textTransform: string=?,
    ~top: string=?, ~unicodeBidi: string=?, ~verticalAlign: string=?,
    ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
    ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
    ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
    ~backgroundOrigin: string=?, ~backgroundSize: string=?,
    ~backgroundClip: string=?, ~borderRadius: string=?,
    ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
    ~borderBottomLeftRadius: string=?, ~borderBottomRightRadius: string=?,
    ~borderImage: string=?, ~borderImageSource: string=?,
    ~borderImageSlice: string=?, ~borderImageWidth: string=?,
    ~borderImageOutset: string=?, ~borderImageRepeat: string=?,
    ~boxShadow: string=?, ~columns: string=?, ~columnCount: string=?,
    ~columnFill: string=?, ~columnGap: string=?, ~columnRule: string=?,
    ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
    ~columnRuleWidth: string=?, ~columnSpan: string=?,
    ~columnWidth: string=?, ~breakAfter: string=?, ~breakBefore: string=?,
    ~breakInside: string=?, ~rest: string=?, ~restAfter: string=?,
    ~restBefore: string=?, ~speakAs: string=?, ~voiceBalance: string=?,
    ~voiceDuration: string=?, ~voicePitch: string=?, ~voiceRange: string=?,
    ~voiceRate: string=?, ~voiceStress: string=?, ~voiceVolume: string=?,
    ~objectFit: string=?, ~objectPosition: string=?,
    ~imageResolution: string=?, ~imageOrientation: string=?,
    ~alignContent: string=?, ~alignItems: string=?, ~alignSelf: string=?,
    ~flex: string=?, ~flexBasis: string=?, ~flexDirection: string=?,
    ~flexFlow: string=?, ~flexGrow: string=?, ~flexShrink: string=?,
    ~flexWrap: string=?, ~justifyContent: string=?, ~order: string=?,
    ~textDecorationColor: string=?, ~textDecorationLine: string=?,
    ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
    ~textEmphasis: string=?, ~textEmphasisColor: string=?,
    ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
    ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
    ~fontKerning: string=?, ~fontLanguageOverride: string=?,
    ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
    ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
    ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
    ~fontVariantPosition: string=?, ~all: string=?,
    ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
    ~textOrientation: string=?, ~writingMode: string=?,
    ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
    ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
    ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
    ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
    ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
    ~maskBorderWidth: string=?, ~maskClip: string=?,
    ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
    ~maskOrigin: string=?, ~maskPosition: string=?, ~maskRepeat: string=?,
    ~maskSize: string=?, ~maskType: string=?, ~backgroundBlendMode: string=?,
    ~isolation: string=?, ~mixBlendMode: string=?,
    ~boxDecorationBreak: string=?, ~boxSizing: string=?,
    ~caretColor: string=?, ~navDown: string=?, ~navLeft: string=?,
    ~navRight: string=?, ~navUp: string=?, ~outlineOffset: string=?,
    ~resize: string=?, ~textOverflow: string=?, ~grid: string=?,
    ~gridArea: string=?, ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
    ~gridAutoRows: string=?, ~gridColumn: string=?, ~gridColumnEnd: string=?,
    ~gridColumnGap: string=?, ~gridColumnStart: string=?, ~gridGap: string=?,
    ~gridRow: string=?, ~gridRowEnd: string=?, ~gridRowGap: string=?,
    ~gridRowStart: string=?, ~gridTemplate: string=?,
    ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
    ~gridTemplateRows: string=?, ~willChange: string=?,
    ~hangingPunctuation: string=?, ~hyphens: string=?, ~lineBreak: string=?,
    ~overflowWrap: string=?, ~tabSize: string=?, ~textAlignLast: string=?,
    ~textJustify: string=?, ~wordBreak: string=?, ~wordWrap: string=?,
    ~animation: string=?, ~animationDelay: string=?,
    ~animationDirection: string=?, ~animationDuration: string=?,
    ~animationFillMode: string=?, ~animationIterationCount: string=?,
    ~animationName: string=?, ~animationPlayState: string=?,
    ~animationTimingFunction: string=?, ~transition: string=?,
    ~transitionDelay: string=?, ~transitionDuration: string=?,
    ~transitionProperty: string=?, ~transitionTimingFunction: string=?,
    ~backfaceVisibility: string=?, ~perspective: string=?,
    ~perspectiveOrigin: string=?, ~transform: string=?,
    ~transformOrigin: string=?, ~transformStyle: string=?,
    ~justifyItems: string=?, ~justifySelf: string=?, ~placeContent: string=?,
    ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
    ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
    ~userSelect: string=?, ~maxLines: string=?, ~marqueeDirection: string=?,
    ~marqueeLoop: string=?, ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
    ~overflowStyle: string=?, ~rotation: string=?, ~rotationPoint: string=?,
    ~alignmentBaseline: string=?, ~baselineShift: string=?, ~clip: string=?,
    ~clipPath: string=?, ~clipRule: string=?, ~colorInterpolation: string=?,
    ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
    ~colorRendering: string=?, ~cursor: string=?,
    ~dominantBaseline: string=?, ~fill: string=?, ~fillOpacity: string=?,
    ~fillRule: string=?, ~filter: string=?, ~floodColor: string=?,
    ~floodOpacity: string=?, ~glyphOrientationHorizontal: string=?,
    ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
    ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
    ~markerMid: string=?, ~markerStart: string=?, ~pointerEvents: string=?,
    ~shapeRendering: string=?, ~stopColor: string=?, ~stopOpacity: string=?,
    ~stroke: string=?, ~strokeDasharray: string=?,
    ~strokeDashoffset: string=?, ~strokeLinecap: string=?,
    ~strokeLinejoin: string=?, ~strokeMiterlimit: string=?,
    ~strokeOpacity: string=?, ~strokeWidth: string=?, ~textAnchor: string=?,
    ~textRendering: string=?, ~rubyAlign: string=?, ~rubyMerge: string=?,
    ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
  
>>> stderr

Affected files: file:///Users/hew/Code/styled-system/src/Box.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/bsconfig.json", "diagnostics": []}}
Deps @astrada/bs-css-core, reason-react
Dep loc /Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/bsconfig.json
Compiled base: /Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs
Source directories: /Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/src
Source files found: /Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/src/Css.re : /Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/src/Css.rei
Adding intf /Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/src/Css.rei
Bad source file (extension) /Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/src/Css.rei
Dep loc /Users/hew/Code/styled-system/node_modules/reason-react/bsconfig.json
Compiled base: /Users/hew/Code/styled-system/node_modules/reason-react/lib/bs
Source directories: /Users/hew/Code/styled-system/node_modules/reason-react/src
Source files found: /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactRouter.rei : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactCompat.re : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactDOMRe.re : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactEvent.re : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactEventRe.rei : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReact.re : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactOptimizedCreateClass.re : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactDOMServerRe.re : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactCompat.rei : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactEventRe.re : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactEvent.rei : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReact.rei : /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactRouter.re : /Users/hew/Code/styled-system/node_modules/reason-react/src/React.re
Adding intf /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactRouter.rei
Adding intf /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactEventRe.rei
Adding intf /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactCompat.rei
Adding intf /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactEvent.rei
Adding intf /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReact.rei
Bad source file (extension) /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactRouter.rei
Bad source file (extension) /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactEventRe.rei
Bad source file (extension) /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReactCompat.rei
Bad source file (extension) /Users/hew/Code/styled-system/node_modules/reason-react/src/ReactEvent.rei
Bad source file (extension) /Users/hew/Code/styled-system/node_modules/reason-react/src/ReasonReact.rei
Got source directories ./src - ./src/node_modules - ./src/node_modules/.lsp
Source directories: /Users/hew/Code/styled-system/src - /Users/hew/Code/styled-system/src/node_modules - /Users/hew/Code/styled-system/src/node_modules/.lsp
Source files found: /Users/hew/Code/styled-system/src/Scale.re : /Users/hew/Code/styled-system/src/Component2.re : /Users/hew/Code/styled-system/src/Primatives.re : /Users/hew/Code/styled-system/src/Component1.re : /Users/hew/Code/styled-system/src/Factories.re : /Users/hew/Code/styled-system/src/Index.re : /Users/hew/Code/styled-system/src/Box.re
adding namespace ReactHooksTemplate : ReactHooksTemplate : /Users/hew/Code/styled-system/lib/bs/ReactHooksTemplate.cmt
-- All local modules found: 8
ReactHooksTemplate
impl /Users/hew/Code/styled-system/lib/bs/ReactHooksTemplate.cmt
Scale-ReactHooksTemplate
impl /Users/hew/Code/styled-system/lib/bs/src/Scale-ReactHooksTemplate.cmt
Component2-ReactHooksTemplate
impl /Users/hew/Code/styled-system/lib/bs/src/Component2-ReactHooksTemplate.cmt
Primatives-ReactHooksTemplate
impl /Users/hew/Code/styled-system/lib/bs/src/Primatives-ReactHooksTemplate.cmt
Component1-ReactHooksTemplate
impl /Users/hew/Code/styled-system/lib/bs/src/Component1-ReactHooksTemplate.cmt
Factories-ReactHooksTemplate
impl /Users/hew/Code/styled-system/lib/bs/src/Factories-ReactHooksTemplate.cmt
Index-ReactHooksTemplate
impl /Users/hew/Code/styled-system/lib/bs/src/Index-ReactHooksTemplate.cmt
Box-ReactHooksTemplate
impl /Users/hew/Code/styled-system/lib/bs/src/Box-ReactHooksTemplate.cmt
############ Namespaced as ReactHooksTemplate at /Users/hew/Code/styled-system/lib/bs/ReactHooksTemplate.cmt
Dependency dirs /Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml /Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src /Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
<< Making lastDefinitions with type error for file:///Users/hew/Code/styled-system/src/Box.re
type error here [1mFile "[1m", line 42, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 41, "character": 25}, "end": {"line": 41, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Primatives.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Primatives-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
<< Replacing lastDefinitions for file:///Users/hew/Code/styled-system/src/Primatives.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Primatives.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Factories.re","languageId":"reason","version":1,"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  let beep = \"\";\n\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) => {\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        (),\n      )}>\n      children\n    </div>;\n  };\n};\n"}}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Factories.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Factories-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
<< Replacing lastDefinitions for file:///Users/hew/Code/styled-system/src/Factories.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Factories.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","languageId":"reason","version":1,"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginBottom=(),\n        ~marginLeft=(),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
type error here [1mFile "[1m", line 42, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 41, "character": 25}, "end": {"line": 41, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":2},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n        ~marginBottom=(),\n        ~marginLeft=(),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 42, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 41, "character": 25}, "end": {"line": 41, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":3},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n        ~marginBottom=(\n          ),\n        ~marginLeft=(),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":4},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n        \n      ),\n        ~marginLeft=(),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":5},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n\n      ),\n        ~marginLeft=(),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 44, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 43, "character": 25}, "end": {"line": 43, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":6},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~marginLeft=(),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 53, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 52, "character": 25}, "end": {"line": 52, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":7},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~marginLeft=(),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 52, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 51, "character": 25}, "end": {"line": 51, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":8},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~marginLeft=(),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 52, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 51, "character": 25}, "end": {"line": 51, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":9},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~marginLeft=(\n          ),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":10},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n        \n      ),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":11},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n\n      ),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 54, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 53, "character": 25}, "end": {"line": 53, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":12},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 63, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 62, "character": 25}, "end": {"line": 62, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":13},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 62, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 61, "character": 25}, "end": {"line": 61, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":14},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~padding=(),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 62, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 61, "character": 25}, "end": {"line": 61, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":15},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~padding=(\n          ),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":16},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n        \n      ),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":17},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n\n      ),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 64, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 63, "character": 25}, "end": {"line": 63, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":18},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 73, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 72, "character": 25}, "end": {"line": 72, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":19},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 72, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 71, "character": 25}, "end": {"line": 71, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":20},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingVertical=(),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 72, characters 25-27[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 71, "character": 25}, "end": {"line": 71, "character": 27}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":21},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingVertical=(\n          ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":22},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingVertical=(\n        \n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":23},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingVertical=(\n\n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 72, characters 23-33[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 71, "character": 23}, "end": {"line": 73, "character": 7}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":24},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingVertical=(\n\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 72, characters 23-444[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 71, "character": 23}, "end": {"line": 82, "character": 7}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":25},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingVertical=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 72, characters 23-443[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 71, "character": 23}, "end": {"line": 81, "character": 7}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":26},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingVertical=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 72, characters 23-456[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingTop: string=?,
         ~paddingRight: string=?, ~paddingBottom: string=?,
         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,
         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,
         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,
         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,
         ~position: string=?, ~quotes: string=?, ~richness: string=?,
         ~right: string=?, ~size: string=?, ~speak: string=?,
         ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingVertical
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 71, "character": 23}, "end": {"line": 81, "character": 7}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingTop: string=?,\n         ~paddingRight: string=?, ~paddingBottom: string=?,\n         ~paddingLeft: string=?, ~page: string=?, ~pageBreakAfter: string=?,\n         ~pageBreakBefore: string=?, ~pageBreakInside: string=?,\n         ~pause: string=?, ~pauseAfter: string=?, ~pauseBefore: string=?,\n         ~pitch: string=?, ~pitchRange: string=?, ~playDuring: string=?,\n         ~position: string=?, ~quotes: string=?, ~richness: string=?,\n         ~right: string=?, ~size: string=?, ~speak: string=?,\n         ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingVertical", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":27},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":28},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingT=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":71,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0269412994385ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 1, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":29},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTo=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":71,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0250339508057ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 2, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":30},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingHorizontal=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 83, characters 27-29[0m[0m:
[1;31mError[0m: The function applied to this argument has type
         (~azimuth: string=?, ~background: string=?,
         ~backgroundAttachment: string=?, ~backgroundColor: string=?,
         ~backgroundImage: string=?, ~backgroundPosition: string=?,
         ~backgroundRepeat: string=?, ~border: string=?,
         ~borderCollapse: string=?, ~borderColor: string=?,
         ~borderSpacing: string=?, ~borderStyle: string=?,
         ~borderTop: string=?, ~borderRight: string=?,
         ~borderBottom: string=?, ~borderLeft: string=?,
         ~borderTopColor: string=?, ~borderRightColor: string=?,
         ~borderBottomColor: string=?, ~borderLeftColor: string=?,
         ~borderTopStyle: string=?, ~borderRightStyle: string=?,
         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,
         ~borderTopWidth: string=?, ~borderRightWidth: string=?,
         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,
         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,
         ~clear: string=?, ~clip: string=?, ~color: string=?,
         ~content: string=?, ~counterIncrement: string=?,
         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,
         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,
         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,
         ~float: string=?, ~font: string=?, ~fontFamily: string=?,
         ~fontSize: string=?, ~fontSizeAdjust: string=?,
         ~fontStretch: string=?, ~fontStyle: string=?,
         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,
         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,
         ~listStyle: string=?, ~listStyleImage: string=?,
         ~listStylePosition: string=?, ~listStyleType: string=?,
         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,
         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,
         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,
         ~outlineColor: string=?, ~outlineStyle: string=?,
         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,
         ~overflowY: string=?, ~paddingRight: string=?,
         ~paddingBottom: string=?, ~paddingLeft: string=?, ~page: string=?,
         ~pageBreakAfter: string=?, ~pageBreakBefore: string=?,
         ~pageBreakInside: string=?, ~pause: string=?, ~pauseAfter: string=?,
         ~pauseBefore: string=?, ~pitch: string=?, ~pitchRange: string=?,
         ~playDuring: string=?, ~position: string=?, ~quotes: string=?,
         ~richness: string=?, ~right: string=?, ~size: string=?,
         ~speak: string=?, ~speakHeader: string=?, ~speakNumeral: string=?,
         ~speakPunctuation: string=?, ~speechRate: string=?,
         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,
         ~textDecoration: string=?, ~textIndent: string=?,
         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,
         ~unicodeBidi: string=?, ~verticalAlign: string=?,
         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,
         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,
         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,
         ~backgroundOrigin: string=?, ~backgroundSize: string=?,
         ~backgroundClip: string=?, ~borderRadius: string=?,
         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,
         ~borderBottomLeftRadius: string=?,
         ~borderBottomRightRadius: string=?, ~borderImage: string=?,
         ~borderImageSource: string=?, ~borderImageSlice: string=?,
         ~borderImageWidth: string=?, ~borderImageOutset: string=?,
         ~borderImageRepeat: string=?, ~boxShadow: string=?,
         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,
         ~columnGap: string=?, ~columnRule: string=?,
         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,
         ~columnRuleWidth: string=?, ~columnSpan: string=?,
         ~columnWidth: string=?, ~breakAfter: string=?,
         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,
         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,
         ~voiceBalance: string=?, ~voiceDuration: string=?,
         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,
         ~voiceStress: string=?, ~voiceVolume: string=?,
         ~objectFit: string=?, ~objectPosition: string=?,
         ~imageResolution: string=?, ~imageOrientation: string=?,
         ~alignContent: string=?, ~alignItems: string=?,
         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,
         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,
         ~flexShrink: string=?, ~flexWrap: string=?,
         ~justifyContent: string=?, ~order: string=?,
         ~textDecorationColor: string=?, ~textDecorationLine: string=?,
         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,
         ~textEmphasis: string=?, ~textEmphasisColor: string=?,
         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,
         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,
         ~fontKerning: string=?, ~fontLanguageOverride: string=?,
         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,
         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,
         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,
         ~fontVariantPosition: string=?, ~all: string=?,
         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,
         ~textOrientation: string=?, ~writingMode: string=?,
         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,
         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,
         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,
         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,
         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,
         ~maskBorderWidth: string=?, ~maskClip: string=?,
         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,
         ~maskOrigin: string=?, ~maskPosition: string=?,
         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,
         ~backgroundBlendMode: string=?, ~isolation: string=?,
         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,
         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,
         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,
         ~outlineOffset: string=?, ~resize: string=?,
         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,
         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,
         ~gridAutoRows: string=?, ~gridColumn: string=?,
         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,
         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,
         ~gridRowEnd: string=?, ~gridRowGap: string=?,
         ~gridRowStart: string=?, ~gridTemplate: string=?,
         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,
         ~gridTemplateRows: string=?, ~willChange: string=?,
         ~hangingPunctuation: string=?, ~hyphens: string=?,
         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,
         ~textAlignLast: string=?, ~textJustify: string=?,
         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,
         ~animationDelay: string=?, ~animationDirection: string=?,
         ~animationDuration: string=?, ~animationFillMode: string=?,
         ~animationIterationCount: string=?, ~animationName: string=?,
         ~animationPlayState: string=?, ~animationTimingFunction: string=?,
         ~transition: string=?, ~transitionDelay: string=?,
         ~transitionDuration: string=?, ~transitionProperty: string=?,
         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,
         ~perspective: string=?, ~perspectiveOrigin: string=?,
         ~transform: string=?, ~transformOrigin: string=?,
         ~transformStyle: string=?, ~justifyItems: string=?,
         ~justifySelf: string=?, ~placeContent: string=?,
         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,
         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,
         ~userSelect: string=?, ~maxLines: string=?,
         ~marqueeDirection: string=?, ~marqueeLoop: string=?,
         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,
         ~overflowStyle: string=?, ~rotation: string=?,
         ~rotationPoint: string=?, ~alignmentBaseline: string=?,
         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,
         ~clipRule: string=?, ~colorInterpolation: string=?,
         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,
         ~colorRendering: string=?, ~cursor: string=?,
         ~dominantBaseline: string=?, ~fill: string=?,
         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,
         ~floodColor: string=?, ~floodOpacity: string=?,
         ~glyphOrientationHorizontal: string=?,
         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,
         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,
         ~markerMid: string=?, ~markerStart: string=?,
         ~pointerEvents: string=?, ~shapeRendering: string=?,
         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,
         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,
         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,
         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,
         ~strokeWidth: string=?, ~textAnchor: string=?,
         ~textRendering: string=?, ~rubyAlign: string=?,
         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style
This argument cannot be applied with label ~paddingHorizontal
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 27}, "end": {"line": 82, "character": 29}}, "message": "Error: The function applied to this argument has type\n         (~azimuth: string=?, ~background: string=?,\n         ~backgroundAttachment: string=?, ~backgroundColor: string=?,\n         ~backgroundImage: string=?, ~backgroundPosition: string=?,\n         ~backgroundRepeat: string=?, ~border: string=?,\n         ~borderCollapse: string=?, ~borderColor: string=?,\n         ~borderSpacing: string=?, ~borderStyle: string=?,\n         ~borderTop: string=?, ~borderRight: string=?,\n         ~borderBottom: string=?, ~borderLeft: string=?,\n         ~borderTopColor: string=?, ~borderRightColor: string=?,\n         ~borderBottomColor: string=?, ~borderLeftColor: string=?,\n         ~borderTopStyle: string=?, ~borderRightStyle: string=?,\n         ~borderBottomStyle: string=?, ~borderLeftStyle: string=?,\n         ~borderTopWidth: string=?, ~borderRightWidth: string=?,\n         ~borderBottomWidth: string=?, ~borderLeftWidth: string=?,\n         ~borderWidth: string=?, ~bottom: string=?, ~captionSide: string=?,\n         ~clear: string=?, ~clip: string=?, ~color: string=?,\n         ~content: string=?, ~counterIncrement: string=?,\n         ~counterReset: string=?, ~cue: string=?, ~cueAfter: string=?,\n         ~cueBefore: string=?, ~cursor: string=?, ~direction: string=?,\n         ~display: string=?, ~elevation: string=?, ~emptyCells: string=?,\n         ~float: string=?, ~font: string=?, ~fontFamily: string=?,\n         ~fontSize: string=?, ~fontSizeAdjust: string=?,\n         ~fontStretch: string=?, ~fontStyle: string=?,\n         ~fontVariant: string=?, ~fontWeight: string=?, ~height: string=?,\n         ~left: string=?, ~letterSpacing: string=?, ~lineHeight: string=?,\n         ~listStyle: string=?, ~listStyleImage: string=?,\n         ~listStylePosition: string=?, ~listStyleType: string=?,\n         ~margin: string=?, ~markerOffset: string=?, ~marks: string=?,\n         ~maxHeight: string=?, ~maxWidth: string=?, ~minHeight: string=?,\n         ~minWidth: string=?, ~orphans: string=?, ~outline: string=?,\n         ~outlineColor: string=?, ~outlineStyle: string=?,\n         ~outlineWidth: string=?, ~overflow: string=?, ~overflowX: string=?,\n         ~overflowY: string=?, ~paddingRight: string=?,\n         ~paddingBottom: string=?, ~paddingLeft: string=?, ~page: string=?,\n         ~pageBreakAfter: string=?, ~pageBreakBefore: string=?,\n         ~pageBreakInside: string=?, ~pause: string=?, ~pauseAfter: string=?,\n         ~pauseBefore: string=?, ~pitch: string=?, ~pitchRange: string=?,\n         ~playDuring: string=?, ~position: string=?, ~quotes: string=?,\n         ~richness: string=?, ~right: string=?, ~size: string=?,\n         ~speak: string=?, ~speakHeader: string=?, ~speakNumeral: string=?,\n         ~speakPunctuation: string=?, ~speechRate: string=?,\n         ~stress: string=?, ~tableLayout: string=?, ~textAlign: string=?,\n         ~textDecoration: string=?, ~textIndent: string=?,\n         ~textShadow: string=?, ~textTransform: string=?, ~top: string=?,\n         ~unicodeBidi: string=?, ~verticalAlign: string=?,\n         ~visibility: string=?, ~voiceFamily: string=?, ~volume: string=?,\n         ~whiteSpace: string=?, ~widows: string=?, ~width: string=?,\n         ~wordSpacing: string=?, ~zIndex: string=?, ~opacity: string=?,\n         ~backgroundOrigin: string=?, ~backgroundSize: string=?,\n         ~backgroundClip: string=?, ~borderRadius: string=?,\n         ~borderTopLeftRadius: string=?, ~borderTopRightRadius: string=?,\n         ~borderBottomLeftRadius: string=?,\n         ~borderBottomRightRadius: string=?, ~borderImage: string=?,\n         ~borderImageSource: string=?, ~borderImageSlice: string=?,\n         ~borderImageWidth: string=?, ~borderImageOutset: string=?,\n         ~borderImageRepeat: string=?, ~boxShadow: string=?,\n         ~columns: string=?, ~columnCount: string=?, ~columnFill: string=?,\n         ~columnGap: string=?, ~columnRule: string=?,\n         ~columnRuleColor: string=?, ~columnRuleStyle: string=?,\n         ~columnRuleWidth: string=?, ~columnSpan: string=?,\n         ~columnWidth: string=?, ~breakAfter: string=?,\n         ~breakBefore: string=?, ~breakInside: string=?, ~rest: string=?,\n         ~restAfter: string=?, ~restBefore: string=?, ~speakAs: string=?,\n         ~voiceBalance: string=?, ~voiceDuration: string=?,\n         ~voicePitch: string=?, ~voiceRange: string=?, ~voiceRate: string=?,\n         ~voiceStress: string=?, ~voiceVolume: string=?,\n         ~objectFit: string=?, ~objectPosition: string=?,\n         ~imageResolution: string=?, ~imageOrientation: string=?,\n         ~alignContent: string=?, ~alignItems: string=?,\n         ~alignSelf: string=?, ~flex: string=?, ~flexBasis: string=?,\n         ~flexDirection: string=?, ~flexFlow: string=?, ~flexGrow: string=?,\n         ~flexShrink: string=?, ~flexWrap: string=?,\n         ~justifyContent: string=?, ~order: string=?,\n         ~textDecorationColor: string=?, ~textDecorationLine: string=?,\n         ~textDecorationSkip: string=?, ~textDecorationStyle: string=?,\n         ~textEmphasis: string=?, ~textEmphasisColor: string=?,\n         ~textEmphasisPosition: string=?, ~textEmphasisStyle: string=?,\n         ~textUnderlinePosition: string=?, ~fontFeatureSettings: string=?,\n         ~fontKerning: string=?, ~fontLanguageOverride: string=?,\n         ~fontSynthesis: string=?, ~forntVariantAlternates: string=?,\n         ~fontVariantCaps: string=?, ~fontVariantEastAsian: string=?,\n         ~fontVariantLigatures: string=?, ~fontVariantNumeric: string=?,\n         ~fontVariantPosition: string=?, ~all: string=?,\n         ~glyphOrientationVertical: string=?, ~textCombineUpright: string=?,\n         ~textOrientation: string=?, ~writingMode: string=?,\n         ~shapeImageThreshold: string=?, ~shapeMargin: string=?,\n         ~shapeOutside: string=?, ~clipPath: string=?, ~clipRule: string=?,\n         ~mask: string=?, ~maskBorder: string=?, ~maskBorderMode: string=?,\n         ~maskBorderOutset: string=?, ~maskBorderRepeat: string=?,\n         ~maskBorderSlice: string=?, ~maskBorderSource: string=?,\n         ~maskBorderWidth: string=?, ~maskClip: string=?,\n         ~maskComposite: string=?, ~maskImage: string=?, ~maskMode: string=?,\n         ~maskOrigin: string=?, ~maskPosition: string=?,\n         ~maskRepeat: string=?, ~maskSize: string=?, ~maskType: string=?,\n         ~backgroundBlendMode: string=?, ~isolation: string=?,\n         ~mixBlendMode: string=?, ~boxDecorationBreak: string=?,\n         ~boxSizing: string=?, ~caretColor: string=?, ~navDown: string=?,\n         ~navLeft: string=?, ~navRight: string=?, ~navUp: string=?,\n         ~outlineOffset: string=?, ~resize: string=?,\n         ~textOverflow: string=?, ~grid: string=?, ~gridArea: string=?,\n         ~gridAutoColumns: string=?, ~gridAutoFlow: string=?,\n         ~gridAutoRows: string=?, ~gridColumn: string=?,\n         ~gridColumnEnd: string=?, ~gridColumnGap: string=?,\n         ~gridColumnStart: string=?, ~gridGap: string=?, ~gridRow: string=?,\n         ~gridRowEnd: string=?, ~gridRowGap: string=?,\n         ~gridRowStart: string=?, ~gridTemplate: string=?,\n         ~gridTemplateAreas: string=?, ~gridTemplateColumns: string=?,\n         ~gridTemplateRows: string=?, ~willChange: string=?,\n         ~hangingPunctuation: string=?, ~hyphens: string=?,\n         ~lineBreak: string=?, ~overflowWrap: string=?, ~tabSize: string=?,\n         ~textAlignLast: string=?, ~textJustify: string=?,\n         ~wordBreak: string=?, ~wordWrap: string=?, ~animation: string=?,\n         ~animationDelay: string=?, ~animationDirection: string=?,\n         ~animationDuration: string=?, ~animationFillMode: string=?,\n         ~animationIterationCount: string=?, ~animationName: string=?,\n         ~animationPlayState: string=?, ~animationTimingFunction: string=?,\n         ~transition: string=?, ~transitionDelay: string=?,\n         ~transitionDuration: string=?, ~transitionProperty: string=?,\n         ~transitionTimingFunction: string=?, ~backfaceVisibility: string=?,\n         ~perspective: string=?, ~perspectiveOrigin: string=?,\n         ~transform: string=?, ~transformOrigin: string=?,\n         ~transformStyle: string=?, ~justifyItems: string=?,\n         ~justifySelf: string=?, ~placeContent: string=?,\n         ~placeItems: string=?, ~placeSelf: string=?, ~appearance: string=?,\n         ~caret: string=?, ~caretAnimation: string=?, ~caretShape: string=?,\n         ~userSelect: string=?, ~maxLines: string=?,\n         ~marqueeDirection: string=?, ~marqueeLoop: string=?,\n         ~marqueeSpeed: string=?, ~marqueeStyle: string=?,\n         ~overflowStyle: string=?, ~rotation: string=?,\n         ~rotationPoint: string=?, ~alignmentBaseline: string=?,\n         ~baselineShift: string=?, ~clip: string=?, ~clipPath: string=?,\n         ~clipRule: string=?, ~colorInterpolation: string=?,\n         ~colorInterpolationFilters: string=?, ~colorProfile: string=?,\n         ~colorRendering: string=?, ~cursor: string=?,\n         ~dominantBaseline: string=?, ~fill: string=?,\n         ~fillOpacity: string=?, ~fillRule: string=?, ~filter: string=?,\n         ~floodColor: string=?, ~floodOpacity: string=?,\n         ~glyphOrientationHorizontal: string=?,\n         ~glyphOrientationVertical: string=?, ~imageRendering: string=?,\n         ~kerning: string=?, ~lightingColor: string=?, ~markerEnd: string=?,\n         ~markerMid: string=?, ~markerStart: string=?,\n         ~pointerEvents: string=?, ~shapeRendering: string=?,\n         ~stopColor: string=?, ~stopOpacity: string=?, ~stroke: string=?,\n         ~strokeDasharray: string=?, ~strokeDashoffset: string=?,\n         ~strokeLinecap: string=?, ~strokeLinejoin: string=?,\n         ~strokeMiterlimit: string=?, ~strokeOpacity: string=?,\n         ~strokeWidth: string=?, ~textAnchor: string=?,\n         ~textRendering: string=?, ~rubyAlign: string=?,\n         ~rubyMerge: string=?, ~rubyPosition: string=?) => ReactDOMRe.style\nThis argument cannot be applied with label ~paddingHorizontal", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":31},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~padding=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":32},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingB=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":82,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0171661376953ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 3, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":33},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingBo=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":82,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0119209289551ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 4, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":34},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingBot=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":35},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingBott=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":82,"character":20},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0109672546387ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 5, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":36},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingBotto=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":37},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingBottom=(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":82,"character":22},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0181198120117ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 6, "jsonrpc": "2.0", "result": []}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 83, characters 23-25[0m[0m:
[1;31mError[0m: This expression has type unit but an expression was expected of type
         string
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 23}, "end": {"line": 82, "character": 25}}, "message": "Error: This expression has type unit but an expression was expected of type\n         string", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":38},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n        ~paddingBottom=(\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":39},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n        \n      ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 83, characters 21-39[0m[0m:
[1;31mError[0m: This expression has type unit but an expression was expected of type
         string
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 21}, "end": {"line": 84, "character": 7}}, "message": "Error: This expression has type unit but an expression was expected of type\n         string", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":40},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n\n      ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
type error here [1mFile "[1m", line 83, characters 21-31[0m[0m:
[1;31mError[0m: This expression has type unit but an expression was expected of type
         string
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 82, "character": 21}, "end": {"line": 84, "character": 7}}, "message": "Error: This expression has type unit but an expression was expected of type\n         string", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":41},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":42},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":43},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          \n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":44},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n        \n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":45},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      \n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":46},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":47},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~/\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":48},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~padd\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":49},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddi\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":91,"character":12},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0119209289551ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 7, "jsonrpc": "2.0", "result": []}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":50},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingL\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":51},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLe\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":91,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0278949737549ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 8, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":52},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLef\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":91,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0269412994385ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 9, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":53},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":91,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0250339508057ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 10, "jsonrpc": "2.0", "result": []}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":54},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft()\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":55},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":56},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(),\n      ~paddingLeft(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":57},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(),\n      ~padding(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":58},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(),\n      ~paddingR(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":92,"character":15},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0269412994385ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 11, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":59},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(),\n      ~paddingRi(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":92,"character":16},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0131130218506ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 12, "jsonrpc": "2.0", "result": []}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":60},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(),\n      ~paddingRig(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":92,"character":17},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0190734863281ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 13, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":61},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(),\n      ~paddingRigh(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"position":{"line":92,"character":18},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.0119209289551ms
don't yet support completion for argument labels, but I hope to soon!
Sending response {"id": 14, "jsonrpc": "2.0", "result": []}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":62},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(),\n      ~paddingRight(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":63},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n      ~paddingLeft(\n        ),\n      ~paddingRight(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":64},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n            \n          ),\n      ~paddingRight(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":65},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          ),\n      ~paddingRight(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":66},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          ),\n      ~paddingRight()\n        ,\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":67},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          ),\n      ~paddingRight(),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":68},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          ),\n      ~paddingRight(\n        ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":69},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          ),\n          ~paddingRight(\n            \n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":70},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          ),\n          ~paddingRight(\n\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":71},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          ),\n          ~paddingRight(\n\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":72},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          ),\n          ~paddingRight(\n\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":73},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          ),\n          ~paddingRight(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":74},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0100135803223ms
Sending response {"id": 15, "jsonrpc": "2.0", "error": {"code": -32603, "message": "File \"\", line 18, characters 13-34:\nError: SyntaxError in block"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":75},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          \n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":76},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          {}\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":77},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":78},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          \n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":79},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          {}\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":80},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":81},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          \n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":82},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          {}\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":83},"contentChanges":[{"text":"module type Config = {let scale: array(int);};\n\nmodule BoxMaker = (Config: Config) => {\n  [@react.component]\n  let make =\n      (\n        ~py=0,\n        ~px=0,\n        ~p=0,\n        ~mt=0,\n        ~mb=0,\n        ~ml=0,\n        ~mr=0,\n        ~style=Css.style([]),\n        children,\n      ) =>\n    <div\n      style={ReactDOMRe.Style.make(\n        ~marginTop=\n          switch (mt) {\n          | mt when mt == 5 => Config.scale[5] |> string_of_int\n          | mt when mt == 4 => Config.scale[4] |> string_of_int\n          | mt when mt == 3 => Config.scale[3] |> string_of_int\n          | mt when mt == 2 => Config.scale[2] |> string_of_int\n          | mt when mt == 1 => Config.scale[1] |> string_of_int\n          | mt => mt |> string_of_int\n          /* | None => [] */\n          },\n        ~marginRight=\n          switch (mr) {\n          | mr when mr == 5 => Config.scale[5] |> string_of_int\n          | mr when mr == 4 => Config.scale[4] |> string_of_int\n          | mr when mr == 3 => Config.scale[3] |> string_of_int\n          | mr when mr == 2 => Config.scale[2] |> string_of_int\n          | mr when mr == 1 => Config.scale[1] |> string_of_int\n          | mr => mr |> string_of_int\n          /* | None => [] */\n          },\n      ~marginBottom=(\n          switch (mb) {\n          | mb when mb == 5 => Config.scale[5] |> string_of_int\n          | mb when mb == 4 => Config.scale[4] |> string_of_int\n          | mb when mb == 3 => Config.scale[3] |> string_of_int\n          | mb when mb == 2 => Config.scale[2] |> string_of_int\n          | mb when mb == 1 => Config.scale[1] |> string_of_int\n          | mb => mb |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~marginLeft=(\n          switch (ml) {\n          | ml when ml == 5 => Config.scale[5] |> string_of_int\n          | ml when ml == 4 => Config.scale[4] |> string_of_int\n          | ml when ml == 3 => Config.scale[3] |> string_of_int\n          | ml when ml == 2 => Config.scale[2] |> string_of_int\n          | ml when ml == 1 => Config.scale[1] |> string_of_int\n          | ml => ml |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~padding=(\n          switch (p) {\n          | p when p == 5 => Config.scale[5] |> string_of_int\n          | p when p == 4 => Config.scale[4] |> string_of_int\n          | p when p == 3 => Config.scale[3] |> string_of_int\n          | p when p == 2 => Config.scale[2] |> string_of_int\n          | p when p == 1 => Config.scale[1] |> string_of_int\n          | p => p |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingTop=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          /* | None => [] */\n          },\n      ),\n      ~paddingBottom=(\n          switch (py) {\n          | py when py == 5 => Config.scale[5] |> string_of_int\n          | py when py == 4 => Config.scale[4] |> string_of_int\n          | py when py == 3 => Config.scale[3] |> string_of_int\n          | py when py == 2 => Config.scale[2] |> string_of_int\n          | py when py == 1 => Config.scale[1] |> string_of_int\n          | py => py |> string_of_int\n          }\n      ),\n          ~paddingLeft(\n\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n          ~paddingRight(\n          switch (px) {\n          | px when px == 5 => Config.scale[5] |> string_of_int\n          | px when px == 4 => Config.scale[4] |> string_of_int\n          | px when px == 3 => Config.scale[3] |> string_of_int\n          | px when px == 2 => Config.scale[2] |> string_of_int\n          | px when px == 1 => Config.scale[1] |> string_of_int\n          | px => px |> string_of_int\n          }\n          ),\n        (),\n      )}>\n      children\n    </div>;\n};\n"}]}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Box.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Box-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Box.re", "diagnostics": [{"range": {"start": {"line": 17, "character": 13}, "end": {"line": 17, "character": 34}}, "message": "Error: SyntaxError in block", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/formatting","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"},"options":{"tabSize":2,"insertSpaces":true}}}
[server] Got a method textDocument/formatting
[server] processing took 0.0138282775879ms
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "File \"\", line 18, characters 13-34:\nError: SyntaxError in block"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re","version":83}}}
>> Build system running: /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsb.exe -make-world
>>> stdout
ninja: no work to do.
ninja: no work to do.
[1/2] [34mBuilding[39m [2msrc/Box.mlast[22m
File "/Users/hew/Code/styled-system/src/Box.re", line 18, characters 13-34:
Error: SyntaxError in block
File "/Users/hew/Code/styled-system/src/Box.re", line 1:
Error: Error while running external preprocessor
Command line: /Users/hew/Code/styled-system/node_modules/bs-platform/lib/refmt.exe --print binary '/Users/hew/Code/styled-system/src/Box.re' > /var/folders/jm/0vvhj8q12l92b2p_qht5mptm0000gn/T/ocamlpp58aa9d

>>> stderr
[31mninja: error: [0mrebuilding 'build.ninja': subcommand failed
Affected files: file:///Users/hew/Code/styled-system//Users/hew/Code/styled-system/src/Box.re file:///Users/hew/Code/styled-system//Users/hew/Code/styled-system/src/Box.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/bsconfig.json", "diagnostics": []}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Component1.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Component1-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
<< Replacing lastDefinitions for file:///Users/hew/Code/styled-system/src/Component1.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Component1.re", "diagnostics": []}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Component2.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Component2-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
<< Replacing lastDefinitions for file:///Users/hew/Code/styled-system/src/Component2.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Component2.re", "diagnostics": []}}
Running diagnostics for file:///Users/hew/Code/styled-system/src/Index.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Index-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
<< Replacing lastDefinitions for file:///Users/hew/Code/styled-system/src/Index.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Index.re", "diagnostics": []}}
Running diagnostics for file:///Users/hew/Code/styled-system//Users/hew/Code/styled-system/src/Box.re
Running diagnostics for file:///Users/hew/Code/styled-system/src/Scale.re
➡️ running bsc /Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/hew/Code/styled-system/lib/bs' -I '/Users/hew/Code/styled-system/lib/bs/src' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules' -I '/Users/hew/Code/styled-system/lib/bs/src/node_modules/.lsp' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -I '/Users/hew/Code/styled-system/node_modules/@astrada/bs-css-core/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/reason-react/lib/bs/src' -I '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReactHooksTemplate -ppx ''\''/Users/hew/Code/styled-system/node_modules/bs-platform/lib/reactjs_jsx_ppx_3.exe'\''' -ppx '/Users/hew/Code/styled-system/node_modules/bs-platform/lib/bsppx.exe' -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/hew/Code/styled-system/node_modules/.lsp/Scale-ReactHooksTemplate.ast with pwd /Users/hew/Code/styled-system
<< Replacing lastDefinitions for file:///Users/hew/Code/styled-system/src/Scale.re
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/hew/Code/styled-system/src/Scale.re", "diagnostics": []}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Primatives.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Primatives.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Factories.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Factories.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/hew/Code/styled-system/src/Box.re"}}}
